1.)gcd or hcf:-
---------------------------------------------------------------------------------
# Python program to find H.C.F of two numbers
def compute_hcf(x, y):
    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print("The H.C.F. is", compute_hcf(num1, num2))

or efficient

# Function to find HCF the Using Euclidian algorithm
def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x
hcf = compute_hcf(300, 400)
print("The HCF is", hcf)

--------------------------------------------------------------------------------------------------------------------------------------------------------
2.)Lcm
# Python Program to find the L.C.M. of two input number

def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm

num1 = 54
num2 = 24
print("The L.C.M. is", compute_lcm(num1, num2))
------------------------------------------------------------------------------------------------
3.)Strong number:
Example
Input : 145
Output : It's a Strong Number.
Explanation : Number = 145
145 = 1! + 4! + 5!
145 = 1 + 24 + 120

def fac(n):
    r=1
    for i in range(1,n+1):
        r=r*i
    return r
n=int(input())
t=n
result=0
while t>0:
    digit=t%10
    result+=fac(digit)
    t=t//10
if result==n:
    print("strong")
else:
    print("no")
  --------------------------------------------------
  4.)ort first of arr in asc and second half in desc

arr=[int(x) for x in input().split()]
n=len(arr)
h=n//2
fh=arr[:h]
sh=arr[h:]
print(fh)
print(sh)
for i in range(0,len(fh)-1):
    for j in range(0,len(fh)-1):
        if fh[j]>fh[j+1]:
            fh[j],fh[j+1]=fh[j+1],fh[j]
for i in range(0,len(sh)-1):
    for j in range(0,len(sh)-1):
        if sh[j]<sh[j+1]:
            sh[j],sh[j+1]=sh[j+1],sh[j]
print(fh+sh)
------------------------------------------------------------------------------------------------------------
5.)repeating and non repeating numbers in array

arr=[int(x) for x in input().split()]
d={}
for i in arr:
    if i in d:
        d[i]+=1
    else:
        d[i]=1
l=[]
m=[]
for k,v in d.items():
    if d.get(k)==1:
        l.append(k)
    if d.get(k)>1:
        m.append(k)
print("non repeating",l)
print("repeating",m)
------------------------------------------------------------------------------------------------------------------------------------------------------
6.) remove duplicates in an array

arr=[int(x) for x in input().split()]
n=len(arr)
arr.sort()
print(arr)
i=0
for j in range(1,n):
    #comparing current element with previous elememnt
    if arr[j]!=arr[i]:
        i+=1
        arr[i]=arr[j]
# i + 1 Length of the new array with unique elements
for i in range(0,i+1):
    print(arr[i],end=" ")
    
--------------------------------------------------------------------------------------------------------------------------------------------------------












